/* jquery.scrolly v1.0.0-dev | (c) @ajlkn | MIT licensed | lightly optimized */
(function($){
  var T="length", N=null, R="top", I="offset", NS="click.scrolly", $w=$(window);

  function computeTarget(sel, opt){
    var $el = $(sel), a, f, v;
    if ($el[T]===0) return N;
    a = $el[I]()[R];
    switch(opt.anchor){
      case "middle":
        f = a - ($w.height() - $el.outerHeight())/2;
        break;
      default:
      case R:
        f = Math.max(a, 0);
    }
    v = (typeof opt[I] === "function") ? opt[I]() : opt[I];
    return f - v;
  }

  $.fn.scrolly = function(opts){
    var $this = $(this), i, href, cfg, preset = N;

    if (this[T]===0) return $this;
    if (this[T]>1){ for(i=0;i<this[T];i++) $(this[i]).scrolly(opts); return $this; }

    href = $this.attr("href");
    if (!href || href.charAt(0)!=="#" || href[T]<2) return $this;

    cfg = $.extend({
      anchor: R,
      easing: "swing",
      offset: 0,
      parent: $("body,html"),
      pollOnce: false,
      speed: 1000
    }, opts);

    if (cfg.pollOnce) preset = computeTarget(href, cfg);

    $this.off(NS).on(NS, function(ev){
      var dest = (preset!==N) ? preset : computeTarget(href, cfg);
      if (dest===N) return;
      ev.preventDefault();
      // stop + clear queue to avoid stacked animations on repeated clicks
      cfg.parent.stop(true, false).animate({ scrollTop: dest }, cfg.speed, cfg.easing);
    });

    return $this;
  };
})(jQuery);
